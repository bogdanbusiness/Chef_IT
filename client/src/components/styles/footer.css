:root {
  --footer-iconSize: 32px;
  --footer-iconGapSize: 2.5vw;
  --footer-itemsNo: 4;
}

div.footerContainer {
  display: flex;
  align-items: end;
}

img.mobile, img.desktop {
  width: 100%;
}

img.desktop {
  display: none;
}

span.iconsContainer {
  display: none;
}

/* Desktop website */
@media screen and (min-width: 768px) {
  img.mobile {
    display: none;
  }

  img.desktop {
    display: block;
    visibility: hidden;
  }

  div.footerContainer {
    display: flex;
    align-items: center;
    justify-content: center;

    background-image: url(../../assets/desktopFooter.png);
    background-repeat: no-repeat;
    background-position: bottom;
    background-size: contain;

    /* there seems to be no way to do this without this hard calculation...*/
    /* the aspect ratio of the image used is 16:1 width:height */
    height: calc(100vw/16);
  }

  span.iconsContainer {
    display: flex;
    justify-content: space-evenly;

    /* I cannot understand why the elements are NOT perfectly centered, there is probably a problem
    with the hack above... and i blame CSS for not having proper ways of sizing a background image */
    padding: 0 0 0 3vw;

    width: calc( var(--footer-itemsNo) * (var(--footer-iconSize) + var(--footer-iconGapSize)) - var(--footer-iconGapSize) ) ;
  }

  img.appIcon {
    width: var(--footer-iconSize);
  }
}